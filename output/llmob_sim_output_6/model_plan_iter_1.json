{
  "model_type": "agent_based",
  "description": "An agent-based model simulating daily mobility trajectories of urban residents driven by habitual patterns, motivations, and personas.",
  "entities": [
    {
      "name": "Resident",
      "attributes": [
        "age",
        "gender",
        "occupation",
        "home_location",
        "work_location",
        "daily_schedule"
      ],
      "behaviors": [
        "commute",
        "work",
        "shop",
        "exercise",
        "socialize",
        "rest"
      ],
      "initialization": {
        "method": "data_driven",
        "parameters": {
          "historical_trajectory_data": "2019Y.json",
          "persona_information": "Inferred from data"
        }
      }
    },
    {
      "name": "Location",
      "attributes": [
        "type",
        "capacity",
        "operating_hours",
        "coordinates"
      ],
      "behaviors": [
        "host_activities"
      ],
      "initialization": {
        "method": "data_driven",
        "parameters": {
          "location_data": "poi_category_192021_longitude_latitude_complement_alignment_clean.json"
        }
      }
    },
    {
      "name": "Organization",
      "attributes": [
        "type",
        "employees",
        "operating_hours"
      ],
      "behaviors": [
        "operate",
        "schedule_events"
      ],
      "initialization": {
        "method": "specified",
        "parameters": {
          "types": [
            "office",
            "school",
            "gym"
          ]
        }
      }
    }
  ],
  "behaviors": [
    {
      "name": "Commute",
      "description": "Residents travel between home and work locations.",
      "applicable_to": [
        "Resident"
      ],
      "parameters": {
        "average_commute_time": 30
      },
      "algorithm": "Calculate route based on home and work locations using shortest path algorithms."
    },
    {
      "name": "Shop",
      "description": "Residents visit stores to purchase goods.",
      "applicable_to": [
        "Resident"
      ],
      "parameters": {
        "shop_visit_probability": 0.3
      },
      "algorithm": "Determine shopping activity based on probability and location proximity."
    },
    {
      "name": "Exercise",
      "description": "Residents participate in physical activities.",
      "applicable_to": [
        "Resident"
      ],
      "parameters": {
        "exercise_frequency": 3
      },
      "algorithm": "Schedule exercise based on frequency and resident's persona."
    }
  ],
  "interactions": [
    {
      "name": "Socialize",
      "description": "Residents interact with each other at social venues.",
      "entities_involved": [
        "Resident",
        "Location"
      ],
      "trigger": "proximity",
      "effect": "Increase social interaction count."
    },
    {
      "name": "Work",
      "description": "Residents perform work-related activities at their workplace.",
      "entities_involved": [
        "Resident",
        "Organization"
      ],
      "trigger": "time",
      "effect": "Allocate time at work location."
    }
  ],
  "environment": {
    "type": "continuous",
    "dimensions": null,
    "time_step": 10,
    "time_unit": "minutes"
  },
  "parameters": {
    "population_size": 1000,
    "simulation_duration_days": 30,
    "average_commute_time": 30,
    "shop_visit_probability": 0.3,
    "exercise_frequency": 3
  },
  "initialization": {
    "population_size": 1000,
    "random_seed": 42
  },
  "algorithms": {
    "route_calculation": "Dijkstra's algorithm for pathfinding",
    "activity_scheduling": "Pattern-based scheduling using historical data"
  },
  "data_sources": [
    {
      "name": "2019Y.json",
      "purpose": "Provides historical activity trajectories of residents",
      "fields_used": [
        "resident_id",
        "activities"
      ]
    },
    {
      "name": "poi_category_192021_longitude_latitude_complement_alignment_clean.json",
      "purpose": "Maps POIs to geographic coordinates",
      "fields_used": [
        "latitude",
        "longitude",
        "POI name"
      ]
    },
    {
      "name": "catto.json",
      "purpose": "Defines category for each POI",
      "fields_used": [
        "POI name",
        "category"
      ]
    }
  ],
  "code_structure": {
    "files": [
      {
        "name": "main.py",
        "description": "Main simulation loop and execution"
      },
      {
        "name": "agents.py",
        "description": "Defines agent behaviors and interactions"
      },
      {
        "name": "environment.py",
        "description": "Setup and manage simulation environment"
      },
      {
        "name": "data_loader.py",
        "description": "Load and preprocess historical data"
      },
      {
        "name": "metrics.py",
        "description": "Calculate and track evaluation metrics"
      }
    ],
    "dependencies": [
      "numpy",
      "pandas",
      "matplotlib",
      "networkx"
    ]
  },
  "prediction_period": {
    "start_day": 1,
    "end_day": 30
  },
  "evaluation_metrics": [
    "Step distance (SD)",
    "Step interval (SI)",
    "Jensen-Shannon divergence (JSD)",
    "ActivityCoverage",
    "InteractionFrequency"
  ]
}