{
  "model_type": "agent_based",
  "description": "An agent-based model simulating urban residents' daily activity trajectories influenced by habitual patterns, motivations, and personas.",
  "entities": [
    {
      "name": "Resident",
      "attributes": [
        "age",
        "gender",
        "occupation",
        "home_location",
        "work_location",
        "daily_schedule",
        "transport_mode"
      ],
      "behaviors": [
        "commute",
        "work",
        "shop",
        "exercise",
        "socialize",
        "rest"
      ],
      "initialization": {
        "method": "data_driven",
        "parameters": {
          "historical_data_file": "2019Y.json"
        }
      }
    },
    {
      "name": "Location",
      "attributes": [
        "type",
        "capacity",
        "opening_hours",
        "popularity"
      ],
      "behaviors": [
        "host_event",
        "attract_visitors"
      ],
      "initialization": {
        "method": "data_driven",
        "parameters": {
          "location_data_file": "poi_category_192021_longitude_latitude_complement_alignment_clean.json"
        }
      }
    },
    {
      "name": "Organization",
      "attributes": [
        "type",
        "employee_count",
        "location",
        "business_hours"
      ],
      "behaviors": [
        "operate",
        "host_meetings"
      ],
      "initialization": {
        "method": "random",
        "parameters": {
          "random_seed": 42
        }
      }
    }
  ],
  "behaviors": [
    {
      "name": "commute",
      "description": "Residents travel between their home and work locations.",
      "applicable_to": [
        "Resident"
      ],
      "parameters": {
        "transport_mode": "transport_mode"
      },
      "algorithm": "Calculate shortest path based on transport_mode and traffic conditions."
    },
    {
      "name": "work",
      "description": "Residents perform their job functions during business hours.",
      "applicable_to": [
        "Resident"
      ],
      "parameters": {
        "work_location": "work_location"
      },
      "algorithm": "Occupy work location for duration of business hours."
    },
    {
      "name": "shop",
      "description": "Residents visit commercial locations for shopping.",
      "applicable_to": [
        "Resident"
      ],
      "parameters": {
        "shopping_list": "derived from Motivation"
      },
      "algorithm": "Select nearest commercial location with required items and visit."
    }
  ],
  "interactions": [
    {
      "name": "Commute",
      "description": "Residents travel between their home and work locations.",
      "entities_involved": [
        "Resident",
        "Location"
      ],
      "trigger": "time",
      "effect": "Update Resident's location to work or home based on schedule."
    },
    {
      "name": "Shopping",
      "description": "Residents visit commercial locations for shopping.",
      "entities_involved": [
        "Resident",
        "Location"
      ],
      "trigger": "motivation",
      "effect": "Increase location's popularity and Resident's satisfaction."
    },
    {
      "name": "Work",
      "description": "Residents perform their job functions during business hours.",
      "entities_involved": [
        "Resident",
        "Organization"
      ],
      "trigger": "time",
      "effect": "Resident contributes to organization's output."
    }
  ],
  "environment": {
    "type": "continuous",
    "dimensions": null,
    "time_step": 1,
    "time_unit": "hours"
  },
  "parameters": {
    "simulation_duration_days": 30,
    "population_size": 1000,
    "initial_seed": 42
  },
  "initialization": {
    "population_size": 1000,
    "random_seed": 42
  },
  "algorithms": {
    "pattern_recognition": "Extract Patterns using LLM from historical trajectory data.",
    "motivation_inference": "Infer daily Motivation using recent behaviors and LLM prompting.",
    "trajectory_generation": "Generate daily trajectories using Patterns, Persona, and Motivation."
  },
  "data_sources": [
    {
      "name": "2019Y.json",
      "purpose": "Historical activity trajectories of residents.",
      "fields_used": [
        "resident_id",
        "location-time pairs"
      ]
    },
    {
      "name": "poi_category_192021_longitude_latitude_complement_alignment_clean.json",
      "purpose": "Geographic coordinates for locations.",
      "fields_used": [
        "latitude",
        "longitude",
        "POI name"
      ]
    },
    {
      "name": "catto.json",
      "purpose": "Mapping POIs to categories.",
      "fields_used": [
        "POI name",
        "category"
      ]
    }
  ],
  "code_structure": {
    "files": [
      {
        "name": "main.py",
        "description": "Main simulation driver and control loop."
      },
      {
        "name": "agents.py",
        "description": "Defines Resident, Location, and Organization classes."
      },
      {
        "name": "behaviors.py",
        "description": "Implements behavior algorithms for agents."
      },
      {
        "name": "interactions.py",
        "description": "Defines and manages interactions between agents."
      },
      {
        "name": "data_preprocessing.py",
        "description": "Preprocessing scripts for input data files."
      }
    ],
    "dependencies": [
      "numpy",
      "pandas",
      "geopy",
      "matplotlib",
      "scikit-learn"
    ]
  },
  "prediction_period": {
    "start_day": 0,
    "end_day": 29
  },
  "evaluation_metrics": [
    "Step distance (SD)",
    "Step interval (SI)",
    "Jensen-Shannon divergence (JSD)",
    "activity_coverage",
    "location_utilization"
  ]
}