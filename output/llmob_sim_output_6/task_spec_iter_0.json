{
  "title": "Simulation Task",
  "description": "I am now tasked with designing a social simulator. The simulator's goal is to simulate the daily activity trajectories of urban residents. Each trajectory consists of an ordered sequence of location-time pairs: {(l\u2080, t\u2080), (l\u2081, t\u2081), ..., (l\u2099, t\u2099)}, representing the locations visited by an individual at specific times.",
  "simulation_focus": "Our agent-based framework is designed to generate daily mobility trajectories for individual urban residents. The core assumption is that a person\u2019s daily activities are driven by two primary factors \u2014 habitual behavioral patterns (Pattern) and instantaneous motivations (Motivation) \u2014 and one secondary factor, the individual's Persona.\n We first extract a set of representative behavioral patterns (Pattern) from the resident\u2019s historical trajectory data by prompting a large language model (LLM). A Pattern refers to a natural language description of a resident\u2019s routine mobility behaviors, generated based on behavioral statistics from historical data. These patterns capture how an individual tends to behave under certain temporal and spatial regularities.\n A typical pattern example might be: \u201cDuring weekdays, you usually travel over 40 kilometers a day. You usually begin your daily trip at 09:20:00 and end it at 18:20:00. You typically visit Platform#479 at the beginning of the day and go to Convenience Store#7665 before returning home. During weekends, you usually travel over 40 kilometers a day. You begin your daily trip at 10:20:00 and end it at 18:20:00, often visiting Bakery#678 in the morning and Sports Club#9 in the evening. You frequently visit Sports Club#9 at 17:00:00, Platform#1330 at 09:00:00, Convenience Store#7665 at 08:00:00, Library#102 at 09:30:00, and Platform#479 at 09:00:00.\u201d\n These candidate patterns are generated during Phase 1: Pattern Recognition in the LLMob system and serve to capture each individual\u2019s typical daily routines in the urban context.\n Next, we also analyze the resident\u2019s historical trajectories, frequently visited locations, and travel routines to infer the individual's Persona \u2014 such as office worker, student, or night shift worker \u2014 using LLM prompting. This adds a semantic layer that further informs the agent\u2019s behavior.\n Once the Pattern and Persona are identified for a resident, we proceed to generate the resident\u2019s Motivation for a specific date. This daily motivation is inferred from the individual's recent behaviors and summarized through LLM prompting (e.g., to maintain fitness, go grocery shopping, or attend a family event). We then perform Motivation-Driven Activity Generation, where the LLM takes in the previously extracted Pattern, Persona, and the current-day Motivation to generate a logical daily trajectory. The output is in JSON format, including: The time of arrival at each location; The reason or motivation for visiting each location.\n",
  "data_folder": "data_fitting/llmob_data/",
  "data_files": {
    "2019Y.json": "This file records the daily activity trajectories of residents. For example: \u201c1874\u201d: [\u201cActivities at 2019-01-09: Rest Area#1120 at 10:50:00, Convenience Store#2420 at 11:30:00, Mortuary#127 at 12:40:00, Udon Restaurant#1824 at 13:00:00, Post Office#197 at 13:30:00, Hot Spring#514 at 15:20:00, Rest Area#261 at 17:50:00, Japanese Family Restaurant#1580 at 20:00:00, Steakhouse#1639 at 20:10:00.\u201d]. This entry indicates that resident with ID \u201c1874\u201d had the above activity trajectory on 2019-01-09. Each record, such as \u201cRest Area#1120 at 10:50:00\u201d, denotes that the resident arrived at \u201cRest Area#1120\u201d at \u201c10:50:00\u201d. By removing the suffix \u201c#1120\u201d, the remaining part \u201cRest Area\u201d can be matched to a location category in the file \u201ccatto.json\u201d. The corresponding longitude and latitude of \u201cRest Area#1120\u201d can be found in the file \u201cpoi_category_192021_longitude_latitude_complement_alignment_clean.json\u201d.",
    "poi_category_192021_longitude_latitude_complement_alignment_clean.json": "This file maps each POI mentioned in \u201c2019Y.json\u201d to its corresponding geographic coordinates. The key is the POI name (e.g., \u201cRest Area\u201d), and the value is an array of arrays. Each inner array contains: Latitude Longitude Full POI name (e.g., \u201cRest Area#1061\u201d). Example: [\u201c35.794755\u201d, \u201c139.790482\u201d, \u201cRest Area#1061\u201d].",
    "catto.json": "This file defines the category for each POI. It is a dictionary where: The key is the POI name (e.g., \u201cRest Area\u201d); The value is the category it belongs to (e.g., \u201cTravel & Transport\u201d). Example: { \u201cRest Area\u201d: \u201cTravel & Transport\u201d}."
  },
  "evaluation_metrics": {
    "Step distance (SD)": {
      "description": "The travel distance between each consecutive decision step within a trajectory is collected. This metric evaluates the spatial pattern of an individual\u2019s activities by measuring the distance between two consecutive locations in a trajectory."
    },
    "Step interval (SI)": {
      "description": "The time gap between each consecutive decision step within a trajectory is recorded. This metric evaluates the temporal pattern of an individual\u2019s activities by measuring the time interval between two successive locations on an individual\u2019s trajectory."
    },
    "Jensen-Shannon divergence (JSD)": {
      "description": "After extracting the above characteristics from both the generated and real-world trajectory data, Jensen-Shannon divergence (JSD) is employed to quantify the discrepancy between them. Lower JSD is preferred."
    }
  },
  "simulation_type": "agent_based",
  "entities": [
    {
      "name": "Resident",
      "attributes": [
        "age",
        "gender",
        "occupation",
        "home_location",
        "work_location",
        "daily_schedule"
      ],
      "behaviors": [
        "commute",
        "shop",
        "exercise",
        "socialize",
        "work",
        "rest"
      ]
    },
    {
      "name": "Location",
      "attributes": [
        "type",
        "address",
        "capacity",
        "operating_hours"
      ],
      "behaviors": [
        "host_activity"
      ]
    }
  ],
  "interactions": [
    {
      "name": "commute_interaction",
      "description": "Residents travel from home to work or other locations.",
      "entities_involved": [
        "Resident",
        "Location"
      ]
    },
    {
      "name": "activity_participation",
      "description": "Residents participate in activities at different locations.",
      "entities_involved": [
        "Resident",
        "Location"
      ]
    }
  ],
  "parameters": {
    "population_size": 1000,
    "simulation_duration_days": 30,
    "activity_types": [
      "commuting",
      "shopping",
      "exercising",
      "socializing",
      "working",
      "resting"
    ]
  },
  "metrics": [
    {
      "name": "activity_diversity",
      "description": "Measures the variety of activities participated in by residents."
    },
    {
      "name": "location_utilization",
      "description": "Evaluates how often locations are used by residents."
    }
  ],
  "validation_criteria": [
    {
      "name": "activity_distribution_convergence",
      "description": "Checks if the distribution of activities stabilizes over time."
    },
    {
      "name": "location_capacity_threshold",
      "description": "Ensures that no location exceeds its capacity during the simulation."
    }
  ],
  "prediction_period": {
    "start_day": 1,
    "end_day": 30
  }
}