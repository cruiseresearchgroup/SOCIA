{
  "task_objective": {
    "description": "I am now tasked with designing a social simulator. The simulator's goal is to simulate the daily activity trajectories of urban residents. Each trajectory consists of an ordered sequence of location-time pairs: {(l₀, t₀), (l₁, t₁), ..., (lₙ, tₙ)}, representing the locations visited by an individual at specific times.",
    "simulation_focus": "Our agent-based framework is designed to generate daily mobility trajectories for individual urban residents. The core assumption is that a person’s daily activities are driven by two primary factors — habitual behavioral patterns (Pattern) and instantaneous motivations (Motivation) — and one secondary factor, the individual's Persona.\n We first extract a set of representative behavioral patterns (Pattern) from the resident’s historical trajectory data by prompting a large language model (LLM). A Pattern refers to a natural language description of a resident’s routine mobility behaviors, generated based on behavioral statistics from historical data. These patterns capture how an individual tends to behave under certain temporal and spatial regularities.\n A typical pattern example might be: “During weekdays, you usually travel over 40 kilometers a day. You usually begin your daily trip at 09:20:00 and end it at 18:20:00. You typically visit Platform#479 at the beginning of the day and go to Convenience Store#7665 before returning home. During weekends, you usually travel over 40 kilometers a day. You begin your daily trip at 10:20:00 and end it at 18:20:00, often visiting Bakery#678 in the morning and Sports Club#9 in the evening. You frequently visit Sports Club#9 at 17:00:00, Platform#1330 at 09:00:00, Convenience Store#7665 at 08:00:00, Library#102 at 09:30:00, and Platform#479 at 09:00:00.”\n These candidate patterns are generated during Phase 1: Pattern Recognition in the LLMob system and serve to capture each individual’s typical daily routines in the urban context.\n Next, we also analyze the resident’s historical trajectories, frequently visited locations, and travel routines to infer the individual's Persona — such as office worker, student, or night shift worker — using LLM prompting. This adds a semantic layer that further informs the agent’s behavior.\n Once the Pattern and Persona are identified for a resident, we proceed to generate the resident’s Motivation for a specific date. This daily motivation is inferred from the individual's recent behaviors and summarized through LLM prompting (e.g., to maintain fitness, go grocery shopping, or attend a family event). We then perform Motivation-Driven Activity Generation, where the LLM takes in the previously extracted Pattern, Persona, and the current-day Motivation to generate a logical daily trajectory. The output is in JSON format, including: The time of arrival at each location; The reason or motivation for visiting each location.\n",
    "Data Calibration Procedure": "To calibrate the simulator using real data: Randomly select multiple residents for calibration; Randomly select a specific date for a given resident; Use the simulator to generate the predicted trajectory for that date; Compare the generated trajectory with the ground-truth trajectory for the same day; Compute evaluation metrics (e.g., JSD, step distance, step interval). Then, improve the simulator’s performance by refining the following types of prompts: 1. The prompt used to extract representative behavioral patterns (Pattern) from historical trajectories; 2. The prompt used to infer the resident’s Persona from their behavioral history; 3. The prompt used to summarize the current day’s Motivation from recent behavior. Through this iterative loop of data calibration and prompt refinement, the simulator is progressively optimized to produce more accurate and realistic mobility simulations.",
    "Simulator Design Requirements": "You are to design a simulator capable of generating daily mobility trajectories for individual urban residents. The simulator must: 1. Data loading: Load data that records the daily activity trajectories of residents; 2. Pattern & Persona Initialization: For each resident, generate and store their Pattern and Persona based on the resident's historical data; 3. Data sampling: From the daily activity trajectories of residents, randomly sample residents and the resident's certain daily mobility trajectories as the validation data; 4. Daily Trajectory Prediction: When predicting a resident’s trajectory (from the validation data) on a particular day: Use their behavior over the past 7 days to generate the Motivation for that day; Use the resident’s Pattern, Persona, and Motivation together as a prompt to the LLM; The LLM then generates a logical daily trajectory in JSON format, including arrival times and reasons for visiting each location. Using this generated logical daily trajectory to compare with the ground-truth trajectory to validate the simulator",
    "Input-Output Mapping of the Simulated Agent Framework": "Input: The user’s historical trajectory data prior to the target date (up to the past 7 days); A contextual prompt for the target date (optional, e.g., a pandemic-related cue; if not provided, leave blank). Output (Simulated Results): A full-day activity trajectory for the target date (structured as time + POI); An explanation of the behavioral motivation (optional). These outputs are compared against the real-world data, and the generation quality is evaluated using the Jensen-Shannon Divergence (JSD) between the step distance (SD) and step interval (DI) distributions."
  },
  "data_folder": "data_fitting/llmob_data/",
  "data_files": {
    "2019Y.json": "This file records the daily activity trajectories of residents. For example: “1874”: [“Activities at 2019-01-09: Rest Area#1120 at 10:50:00, Convenience Store#2420 at 11:30:00, Mortuary#127 at 12:40:00, Udon Restaurant#1824 at 13:00:00, Post Office#197 at 13:30:00, Hot Spring#514 at 15:20:00, Rest Area#261 at 17:50:00, Japanese Family Restaurant#1580 at 20:00:00, Steakhouse#1639 at 20:10:00.”]. This entry indicates that resident with ID “1874” had the above activity trajectory on 2019-01-09. Each record, such as “Rest Area#1120 at 10:50:00”, denotes that the resident arrived at “Rest Area#1120” at “10:50:00”. By removing the suffix “#1120”, the remaining part “Rest Area” can be matched to a location category in the file “catto.json”. The corresponding longitude and latitude of “Rest Area#1120” can be found in the file “poi_category_192021_longitude_latitude_complement_alignment_clean.json”.",
    "poi_category_192021_longitude_latitude_complement_alignment_clean.json": "This file maps each POI mentioned in “2019Y.json” to its corresponding geographic coordinates. The key is the POI name (e.g., “Rest Area”), and the value is an array of arrays. Each inner array contains: Latitude Longitude Full POI name (e.g., “Rest Area#1061”). Example: [“35.794755”, “139.790482”, “Rest Area#1061”].",
    "catto.json": "This file defines the category for each POI. It is a dictionary where: The key is the POI name (e.g., “Rest Area”); The value is the category it belongs to (e.g., “Travel & Transport”). Example: { “Rest Area”: “Travel & Transport”}."
  },
  "evaluation_metrics": {
    "Step distance (SD)": {
      "description": "The travel distance between each consecutive decision step within a trajectory is collected. This metric evaluates the spatial pattern of an individual’s activities by measuring the distance between two consecutive locations in a trajectory."
    },
    "Step interval (SI)": {
      "description": "The time gap between each consecutive decision step within a trajectory is recorded. This metric evaluates the temporal pattern of an individual’s activities by measuring the time interval between two successive locations on an individual’s trajectory."
    },
    "Daily activity routine distribution (DARD)": {
      "description": "For each decision step, a tuple (t, c) is created, where t represents the occurring time interval (e.g., from 0 to 144 in a day) and c identifies the activity category based on the location visited at that step. A histogram is then constructed to represent the distribution of the collected tuples. This feature presents the patterns of individual activities characterized by activity type and timing (e.g., activity type, time). It provides insight into how activities are distributed over space and time and reflects semantic information such as habitual behavior."
    },
    "Spatial-temporal visits distribution (STVD)": {
      "description": "For each decision step, a tuple (t, latitude, longitude) is created, where t represents the occurring time interval (e.g., from 0 to 144 in a day) and latitude, longitude are the geographic coordinates of the location visited at that step. A histogram is subsequently built to represent the distribution of the collected tuples. This feature provides a granular perspective on the generated activities by assessing the spatial-temporal distribution of visited locations within each trajectory, including geographical coordinates and timestamps. It enables a detailed analysis of where and when activities occur."
    },
    "Jensen-Shannon divergence (JSD)": {
      "description": "After extracting the above characteristics from both the generated and real-world trajectory data, Jensen-Shannon divergence (JSD) is employed to quantify the discrepancy between them. Lower JSD is preferred."
    }
  }
}
