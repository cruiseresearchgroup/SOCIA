{
  "code": "# main.py\n\nimport numpy as np\nimport random\nimport matplotlib.pyplot as plt\nfrom agent import Person\nfrom environment import Environment\nfrom metrics import Metrics\n\ndef main():\n    # Set random seed for reproducibility\n    random.seed(42)\n    np.random.seed(42)\n\n    # Simulation parameters\n    population_size = 1000\n    grid_dimensions = (50, 50)\n    initial_infected_percentage = 0.01\n    transmission_probability = 0.05\n    recovery_probability = 0.1\n    time_steps = 100\n\n    # Initialize the environment\n    env = Environment(grid_dimensions, population_size, initial_infected_percentage,\n                      transmission_probability, recovery_probability)\n\n    # Metrics to track\n    metrics = Metrics(env)\n\n    # Run the simulation\n    for _ in range(time_steps):\n        env.step()\n        metrics.update()\n\n    # Plot results\n    metrics.plot_results()\n\nif __name__ == \"__main__\":\n    main()",
  "code_summary": "Generated 39 lines of code containing 0 classes and 1 functions.",
  "metadata": {
    "model_type": "agent_based",
    "entities": [
      "Person"
    ],
    "behaviors": [
      "move",
      "interact",
      "recover",
      "become_infected"
    ]
  }
}